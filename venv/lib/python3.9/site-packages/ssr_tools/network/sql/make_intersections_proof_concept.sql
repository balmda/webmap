-- create a temp table that store the start and end point for each segment
DROP TABLE IF EXISTS p010.z_segs; 
CREATE TABLE p010.z_segs AS 
    SELECT 
        d.geom, 
        compkey
    FROM 
        p010.received_segments,
        ST_Dump(geom) d      
;
ALTER TABLE p010.z_segs ADD COLUMN p_key SERIAL PRIMARY KEY; 


DROP TABLE IF EXISTS p010.z_tmp_all_ints;
CREATE TABLE p010.z_tmp_all_ints AS 
    SELECT 
        DISTINCT ST_StartPoint(geom) AS geom
    FROM p010.z_segs

    UNION

    SELECT 
        DISTINCT ST_EndPoint(geom)
    FROM p010.z_segs
;

DROP TABLE IF EXISTS p010.z_tmp_ints; 
CREATE TABLE p010.z_tmp_ints AS 
    SELECT
        ST_Centroid(
            ST_CollectionExtract(
                unnest(
                    ST_ClusterWithin(geom, 10)
                ),
            1)
        ) geom
    FROM p010.z_tmp_all_ints
;

DROP TABLE IF EXISTS p010.z_testing_ints;
CREATE TABLE p010.z_testing_ints (
    int_pkey SERIAL PRIMARY KEY,
    geom geometry(point,2926)
);

INSERT INTO p010.z_testing_ints (geom)
SELECT a.geom
FROM p010.z_tmp_ints a
;

-- CREATE INDEX {s_index} ON p010.z_testing_ints USING GIST ({int_geom});