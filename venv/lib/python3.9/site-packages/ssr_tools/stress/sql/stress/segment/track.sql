-----------------------------------------------
-- bike lanes with all avaialble data
-- (uses tables in DB, based on Furth 2017 with
-- some adjustments based on direction from prime)
-----------------------------------------------

-- #reading given and assumed road characteristics
DROP TABLE IF EXISTS pg_temp.tmp_attrs;
CREATE TEMP TABLE pg_temp.tmp_attrs AS (
    SELECT
        {id_column}::INTEGER AS id,
        {fclass_column}::TEXT AS fclass,
        COALESCE({lanes},{assumed_lanes})::INTEGER AS lanes,
        COALESCE({separation_type},{assumed_separation_type})::BOOLEAN AS separation_type,
        COALESCE({speed},{assumed_speed})::INTEGER AS speed
    FROM
        {in_schema}.{in_table}
    WHERE
        {track}
        AND {filter}
); 

CREATE INDEX tidx_tmp_attrs_id ON pg_temp.tmp_attrs (id); ANALYZE pg_temp.tmp_attrs;
ALTER TABLE pg_temp.tmp_attrs ADD COLUMN stress_pkey SERIAL PRIMARY KEY; 

CREATE INDEX IF NOT EXISTS idx_tmp_attrs_stress_pkey
ON pg_temp.tmp_attrs
USING BTREE (stress_pkey);

ANALYZE pg_temp.tmp_attrs;


-- #comparing against LTS tables;
DROP TABLE IF EXISTS pg_temp.tmp_stress;
CREATE TEMP TABLE pg_temp.tmp_stress AS (
    SELECT DISTINCT ON (tmp_attrs.id)
        tmp_attrs.id,
        lts.stress, 
        lts.condition,
        lts.criteria
    FROM
        pg_temp.tmp_attrs,
        {track_lts_schema}.{track_lts_table} lts
    WHERE tmp_attrs.lanes <= lts.lanes
    AND tmp_attrs.separation_type::BOOLEAN = lts.separation_type::BOOLEAN
    AND tmp_attrs.speed <= lts.speed
    ORDER BY
        tmp_attrs.id,
        lts.stress ASC
);

CREATE INDEX tidx_tmp_stress_id ON pg_temp.tmp_stress (id); ANALYZE pg_temp.tmp_stress;

-- insert
INSERT INTO {out_schema}.{out_table} (
    {id_column},
    {fclass_column},
    {geom},
    lanes,
    separation_type,
    speed,
    stress, 
    condition, 
    criteria
)
SELECT
    tmp_attrs.id,
    tmp_attrs.fclass,
    {in_table}.geom,
    tmp_attrs.lanes,
    tmp_attrs.separation_type,
    tmp_attrs.speed,
    tmp_stress.stress,
    tmp_stress.condition,
    tmp_stress.criteria
FROM
    pg_temp.tmp_attrs,
    {in_schema}.{in_table},
    pg_temp.tmp_stress
WHERE
    tmp_attrs.id = {in_table}.{id_column}
    AND tmp_attrs.id = tmp_stress.id
;
