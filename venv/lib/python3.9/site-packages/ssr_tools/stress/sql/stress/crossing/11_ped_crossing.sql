-----------------------------------------------
-- CROSSING STRESS (PED)
-----------------------------------------------

-- #reading given and assumed crossing characteristics;
DROP TABLE IF EXISTS pg_temp.tmp_attrs;

-- two way
CREATE TEMP TABLE tmp_attrs AS (
    SELECT
        {id_column}::INTEGER AS id,
        {cross_control}::TEXT AS control,
        COALESCE({cross_lanes},0)::INTEGER AS lanes, --TODO build case
        COALESCE({cross_speed},0)::INTEGER AS speed,--TODO build case
        COALESCE({cross_aadt},0)::INTEGER AS aadt, --TODO build case
        COALESCE({cross_island},FALSE)::BOOLEAN AS island, 
        COALESCE({cross_oneway},FALSE)::BOOLEAN AS oneway
    FROM
        {in_schema}.{in_table}
    WHERE {filter}
);


ALTER TABLE pg_temp.tmp_attrs ADD COLUMN stress_pkey SERIAL PRIMARY KEY; 

CREATE INDEX IF NOT EXISTS idx_tmp_attrs_stress_pkey
ON pg_temp.tmp_attrs
USING BTREE (stress_pkey);

CREATE INDEX IF NOT EXISTS idx_tmp_attrs_stress_id
ON pg_temp.tmp_attrs
USING BTREE (id);

ANALYZE pg_temp.tmp_attrs;


-- #comparing against LTS tables;
DROP TABLE IF EXISTS pg_temp.tmp_stress;
CREATE TEMP TABLE pg_temp.tmp_stress AS (
    SELECT DISTINCT ON (tmp_attrs.id)
        tmp_attrs.id,
        lts.stress, 
        lts.criteria, 
        lts.condition
    FROM
        pg_temp.tmp_attrs,
        {cross_lts_schema}.{cross_lts_table} lts
    WHERE tmp_attrs.lanes <= lts.lanes
    AND tmp_attrs.oneway = lts.oneway
    AND tmp_attrs.control = lts.control
    AND tmp_attrs.island = lts.island
    AND tmp_attrs.speed <= lts.speed
    AND tmp_attrs.aadt <= lts.aadt
    ORDER BY
        tmp_attrs.id,
        (tmp_attrs.lanes = lts.lanes) DESC, --ensures that we give priority to an exact match
        (tmp_attrs.speed = lts.speed) DESC, --ensures that we give priority to an exact match
        lts.stress ASC
);

CREATE INDEX tidx_tmp_stress_id ON pg_temp.tmp_stress (id); 
ANALYZE pg_temp.tmp_stress;

INSERT INTO {out_schema}.{out_table} (
    {id_column},
    {geom},
    lanes,
    speed,
    aadt,
    oneway, 
    island, 
    control,
    stress, 
    criteria, 
    condition
)
SELECT
    tmp_attrs.id,
    {in_table}.geom,
    tmp_attrs.lanes,
    tmp_attrs.speed,
    tmp_attrs.aadt,
    tmp_attrs.oneway, 
    tmp_attrs.island, 
    tmp_attrs.control,
    tmp_stress.stress, 
    tmp_stress.criteria, 
    tmp_stress.condition
FROM
    pg_temp.tmp_attrs,
    {in_schema}.{in_table},
    pg_temp.tmp_stress
WHERE
    tmp_attrs.id = {in_table}.{id_column}
    AND tmp_attrs.id = tmp_stress.id
;
  