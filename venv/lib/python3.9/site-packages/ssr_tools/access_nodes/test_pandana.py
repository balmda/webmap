from access_nodes import *

# need to procvide a ditionary that has a OSM Amenity Tag and a way to aggregate (i.e. count, sum[not funcitonal yet])
pois_dict = {'restaurant': 'count',
                'school': 'count'}

basic_pandana(city='Hoffman Estates', state='Illinois', network='walk', network_query_preset='walk_basic', 
                filter_bad_ints=True,outpath='./cache',
                amenity_types=pois_dict, buffer_size = 1000, network_distance = 500, output_type='shp')

basic_pandana(city='Chicago', state='Illinois', network='walk', network_query_preset='walk_basic', 
                filter_bad_ints=True, outpath='./cache',amenity_types=pois_dict, buffer_size = 1000, 
                network_distance = 500, output_type='shp')

city_list = [['Minneapolis', 'Minnesota'], 
            ['Portland', 'Oregon'], 
            ['Seattle', 'Washington']]

for city in city_list: 
    basic_pandana(city=city[0], state=city[1], network='walk', network_query_preset='walk_basic', 
                filter_bad_ints=True, outpath='./cache',amenity_types=pois_dict, buffer_size = 1000, 
                network_distance = 804, output_type='shp')